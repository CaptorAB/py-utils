name: test_all

permissions:
  contents: read
  actions: read

on:
  workflow_dispatch: {}

jobs:

  windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]

    steps:
      - name: Check out GitHub repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1
          ref: ${{ github.sha }}
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        id: setup_python
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Create virtual environment and install dependencies on Python ${{ steps.setup_python.outputs.python-version }}
        run: |
          python -m venv venv
          source venv/Scripts/activate
          python.exe -m ensurepip
          python.exe -m pip install --upgrade pip setuptools wheel
          pip install --upgrade -r requirements.txt

      - name: Check state of dependencies
        run: |
          source venv/Scripts/activate
          pip list --outdated

      - name: Check and fix with Ruff
        run: |
          source venv/Scripts/activate
          ruff check . --fix --exit-non-zero-on-fix

      - name: Format with Ruff
        run: |
          source venv/Scripts/activate
          ruff format

      - name: Tests with Pytest
        id: pytest
        continue-on-error: true
        run: |
          source venv/Scripts/activate
          PYTHONPATH=${PWD} coverage run -m pytest --verbose --capture=no

      - name: Create GitHub issue on failure
        if: ${{ steps.pytest.outcome == 'failure' }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            await github.rest.issues.create({
              owner: 'CaptorAB',
              repo: 'py-utils',
              title: `Tests failed on ${new Date().toDateString()}`,
              body: `See the full logs here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`,
            })

      - name: Report coverage
        if: ${{ steps.pytest.outcome == 'success' }}
        run: |
          source venv/Scripts/activate
          coverage report

      - name: Fail job if tests failed
        if: ${{ steps.pytest.outcome == 'failure' }}
        run: exit 1

  ubuntu:
    needs: windows
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]

    steps:
      - name: Check out GitHub repository ${{ github.repository }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1
          ref: ${{ github.sha }}
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        id: setup_python
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Create virtual environment and install dependencies on Python ${{ steps.setup_python.outputs.python-version }}
        run: |
          python -m venv venv
          source venv/bin/activate
          which python
          python --version
          python -m ensurepip
          pip install --upgrade pip setuptools wheel
          pip install --upgrade -r requirements.txt

      - name: Check state of dependencies
        run: |
          source venv/bin/activate
          pip list --outdated

      - name: Check and fix with Ruff
        run: |
          source venv/bin/activate
          ruff check . --fix --exit-non-zero-on-fix

      - name: Format with Ruff
        run: |
          source venv/bin/activate
          ruff format

      - name: Tests with Pytest
        id: pytest
        continue-on-error: true
        run: |
          source venv/bin/activate
          PYTHONPATH=${PWD} coverage run -m pytest --verbose --capture=no

      - name: Create GitHub issue on failure
        if: ${{ steps.pytest.outcome == 'failure' }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            await github.rest.issues.create({
              owner: 'CaptorAB',
              repo: 'py-utils',
              title: `Tests failed on ${new Date().toDateString()}`,
              body: `See the full logs here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`,
            })

      - name: Report coverage
        if: ${{ steps.pytest.outcome == 'success' }}
        run: |
          source venv/bin/activate
          coverage report

      - name: Fail job if tests failed
        if: ${{ steps.pytest.outcome == 'failure' }}
        run: exit 1

  macos:
    needs: ubuntu
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]

    steps:
      - name: Check out GitHub repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1
          ref: ${{ github.sha }}
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        id: setup_python
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Create virtual environment and install dependencies on Python ${{ steps.setup_python.outputs.python-version }}
        run: |
          python -m venv venv
          source venv/bin/activate
          which python
          python --version
          python -m ensurepip
          pip install --upgrade pip setuptools wheel
          pip install --upgrade -r requirements.txt

      - name: Check state of dependencies
        run: pip list --outdated

      - name: Check and fix with Ruff
        run: |
          source venv/bin/activate
          ruff check . --fix --exit-non-zero-on-fix

      - name: Format with Ruff
        run: |
          source venv/bin/activate
          ruff format

      - name: Tests with Pytest
        id: pytest
        continue-on-error: true
        run: |
          source venv/bin/activate
          PYTHONPATH=${PWD} coverage run -m pytest --verbose --capture=no

      - name: Create GitHub issue on failure
        if: ${{ steps.pytest.outcome == 'failure' }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            await github.rest.issues.create({
              owner: 'CaptorAB',
              repo: 'py-utils',
              title: `Tests failed on ${new Date().toDateString()}`,
              body: `See the full logs here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`,
            })

      - name: Report coverage
        if: ${{ steps.pytest.outcome == 'success' }}
        run: |
          source venv/bin/activate
          coverage report

      - name: Fail job if tests failed
        if: ${{ steps.pytest.outcome == 'failure' }}
        run: exit 1